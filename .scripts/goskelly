#!/bin/bash

# Check if -h or --help is passed as an argument
if [[ $1 == "-h" || $1 == "--help" ]]; then
    echo -e "Usage: goskelly [project_name]\n"
    echo "Creates a new Go project with a basic structure"
    echo "If GITHUB_USER is set, it will ask to use it as the username"
    exit 0
fi

# Check if go is installed
if ! command -v go &> /dev/null; then
    echo "Go is not installed"
    exit 1
fi

# Check if an argument is passed and store it as the project name
# If no argument is passed, ask for the project name
if [[ $# -eq 1 ]]; then
    proj=$1
else
    while [[ -z $proj ]]; do
        echo "Enter the project name"
        read -p "> " proj
        echo
    done
fi

# Check if directory already exists
if [[ -d $proj ]]; then
    echo "Directory \"$proj\" already exists"
    exit 1
fi

# Check if GITHUB_USER is set and ask if it should be used
# If not, ask for the username
if [[ -z $GITHUB_USER ]]; then
    while [[ -z $username ]]; do
        echo "Enter your GitHub username"
        read -p "> " username
        echo
    done
else
    echo "Use \"$GITHUB_USER\" as the username? [y/n]"
    read -p "> " choice
    echo
    if [[ $choice == "y" || $choice == "Y" || $choice == "" ]]; then
        username=$GITHUB_USER
    else
        while [[ -z $username ]]; do
            echo "Enter your GitHub username"
            read -p "> " username
            echo
        done
    fi
fi

# Create base project structure
mkdir -p $proj/{cmd/$proj,bin,pkg,internal,tests}

cd $proj

echo -e "Creating go.mod file\n"
go mod init github.com/$username/$proj

echo -e "package main\n\nfunc main() {\n}" > cmd/$proj/main.go

echo -e "build:\n\t@go build -o bin/$proj cmd/$proj/main.go" > Makefile
echo -e "\nrun: build\n\t@bin/$proj" >> Makefile

echo "# $proj" > README.md

echo -e "bin/\n.env" > .gitignore

echo -e "\nProject successfully created"
